#!/usr/bin/env perl
# p4-blame --- extended p4 annotate
# Author: Noah Friedman <friedman@splode.com>
# Created: 2013-02-26
# Public domain

# $Id: p4-blame,v 1.5 2015/11/04 20:22:44 friedman Exp $

# Commentary:
# Code:

use strict;
use warnings qw(all);
 no warnings qw(experimental::autoderef);  # for uniq

use POSIX qw(strftime);

use FindBin;
use lib "$FindBin::Bin/../lib/perl";
use lib "$ENV{HOME}/lib/perl";

use NF::P4cmd qw(:direct);

sub log10 { log ($_[0]) / log (10) }
sub uniq  { keys { map { $_ => undef } @_ } }

sub main
{
  my @data = p4 (qw(annotate -c -db -dw -dl), @_);

  my @cmd = map { "change -o $_" } uniq (map { $_->{lower} || () } @data);
  my %change = map { $_->{Date}   =  substr ($_->{Date}, 0, 10);
                     $_->{Change} => $_
                   } p4 (\@cmd, "-b", scalar @cmd, "run");
  undef @cmd; # gc

  my $nfiles = grep { exists $_->{depotFile} } @data;
  my $fcount = 0;
  my $line = 1;
  my $linewidth = 1 + int (log10 (scalar @data));
  my $fmt = sprintf ("%%7d  %%s  %%-9s  %%%dd: %%s", $linewidth);

  for my $elt (@data)
    {
      $elt->{data} .= "\n"
        if (defined $elt->{data} && substr ($elt->{data}, -1, 1) ne "\n");

      if ($elt->{code} eq 'error')
        {
          print STDERR $elt->{data};
          next;
        }
      elsif (exists $elt->{depotFile})  # new file
        {
          $line = 1;
          print "\n" if $fcount++ > 0;
          printf("%s#%s - %s %s (%s) %s\n",
                 @{$elt}{qw(depotFile rev action change type)},
                 strftime ("%Y-%m-%d %H:%M:%S", localtime ($elt->{time})))
            if $nfiles > 1;
          next;
        }

      my $changeno = $elt->{lower};
      my $info = $change{$changeno};
      printf($fmt, $changeno, $info->{Date}, $info->{User}, $line++, $elt->{data});
    }
}

main (@ARGV);

# eof
