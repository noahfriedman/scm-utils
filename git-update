#!/usr/bin/env bash
# $Id: git-update,v 1.6 2017/05/12 22:10:33 friedman Exp $

git_revno()
{
    git rev-list -n1 HEAD
}

bare_repo_p()
{
    case `git config --bool --local --get core.bare` in
        true ) return 0 ;;
        *    ) return 1 ;;
    esac
}

has_remotes()
{
    # exit code 1 if no matches
    git config --local --get-regexp '^remote\..*\.url$' > /dev/null
}

apush() { eval "$1=(\"\${$1[@]}\" \"\${@:2}\")"; }

main()
{
    while :; do
        case $1 in
            -r | --rebase ) shift; apush gitargs --rebase=preserve ;;
            -p | --prune  ) shift; apush gitargs --prune ;;
            * ) break ;;
        esac
    done

    case $# in 0 ) set . ;; esac

    for dir in "$@"; do
        if [ $# -gt 1 ]; then
            case $dir in
                .  ) gdir=`pwd` ;;
                .. ) gdir=`cd .. && pwd` ;;
                *  ) gdir=$dir ;;
            esac
            echo "* $gdir"
        fi

        (
            cd "$dir" || exit $?

            if ! has_remotes; then
                #echo "repository has no upstream remotes"
                return 0
            fi

            if bare_repo_p; then
                git fetch --all
            else
                revno_old=`git_revno`
                git pull "${gitargs[@]}" --all --no-stat --recurse-submodules
                revno_new=`git_revno`

                git-restore-commit-mtime $revno_old..$revno_new
            fi
        )

        test $# -gt 1 && echo
    done
}

main "$@"

# eof
